type: update
name: Filebeat
id: filebeat

logo: https://iconape.com/wp-content/png_logo_vector/elastic-beats.png
description:
  short: 'Filebeat: lightweight shipper for forwarding and centralizing log data'
  text: |
    Filebeat is a lightweight shipper for forwarding and centralizing log data.
    Installed as an agent on your servers, Filebeat monitors the log files or locations that you specify, collects log events, and forwards them either to [Elasticsearch](https://www.elastic.co/products/elasticsearch) or [Logstash](https://www.elastic.co/products/logstash) for indexing.
homepage: https://www.elastic.co/beats/filebeat

targetNodes: any

settings:
  fields:
    - type: string
      name: elasticsearchHost
      caption: OpenSearch (Elasticsearch) Host (optional)
      placeholder: 0.0.0.0:9200
      required: false
      
    - type: compositefield
      caption: Credentials (optional)
      defaultMargins: 0 10 0 0
      items:
        - type: string
          name: elasticsearchUser
          placeholder: User
          width: 200

        - type: displayfield
          cls: x-form-item-label
          value: Password
          width: 60

        - type: string
          name: elasticsearchPassword
          inputType: password
          width: 163
          
    - type: string
      name: kibanaHost
      caption: OpenSearch Dashboards (Kibana) Host (optional)
      placeholder: 0.0.0.0:5601
      required: false
      
    - type: string
      name: logstashHost
      caption: Logstash Host (optional)
      placeholder: 0.0.0.0:5044
      required: false
      
    - type: list
      name: beatsossversion
      caption: Beats OSS version
      values:
        7.12.1: 7.12.1
        latest: latest
      default: 7.12.1
      hideLabel: false
      hidden: false

globals:
  configPath: /etc/filebeat/filebeat.yml
  defaultModules: system

nodeGroupAlias:
  ${targetNodes.nodeGroup}: target

onInstall:
  installFilebeat: ${targetNodes.nodeGroup}
  addToExtendPerm: ${targetNodes.nodeGroup}

onAfterRedeployContainer [target]:
  installFilebeat: ${event.params.nodeGroup:[event.params.nodeId]}

onAfterScaleOut [target]:
  installFilebeat: ${event.response.nodes.join(id,)}

onUninstall:
  cmd [target]: yum remove filebeat
  user: root
  
actions:
  installFilebeat:
    - addSigninKey: ${this}
    - createYumRepo: ${this}
    - addServiceToSudoers: ${this}
    - installAgent: ${this}
    - fixBeatsPermissions: ${this}
    - configureFilebeat: ${this}
    - fixBeatsPermissions: ${this}

  addSigninKey:
    cmd [${this}]: rpm --import https://packages.elastic.co/GPG-KEY-elasticsearch
    user: root
  
  addToExtendPerm:
    cmd [${this}]: |- 
      sed -ci -e 's|common |common /etc/filebeat;|g' /etc/jelastic/extendperm.conf;
      jem filemanager extendperm;
    user: root

  createYumRepo:
    - set:
        body: |
          [elastic-7.x]
          name=Elastic repository for OSS 7.x packages
          baseurl=https://artifacts.elastic.co/packages/oss-7.x/yum
          gpgcheck=1
          gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
          enabled=1
          autorefresh=1
          type=rpm-md

    - cmd [${this}]: echo '${this.body}' > /etc/yum.repos.d/elastic.repo
      user: root
      
  addServiceToSudoers:
    - set:
        body: |
          Cmnd_Alias FILEBEAT_SERVICE = /sbin/service filebeat *, /usr/bin/systemctl * filebeat, /usr/bin/systemctl * filebeat.service, /etc/init.d/filebeat *, filebeat *
          %ssh-access ALL = NOPASSWD: FILEBEAT_SERVICE
    - cmd [${this}]: echo '${this.body}' > /etc/sudoers.d/filebeat
      user: root

  installAgent:
    - if ('${settings.beatsossversion}' == 'latest'):
        - cmd [${this}]: |-
            yum install filebeat
          user: root
    - else:
        - cmd [${this}]: |-
            yum install filebeat-${settings.beatsossversion}
          user: root
    - cmd [${this}]: |-
        systemctl enable filebeat
      user: root
  
  fixBeatsPermissions:
    - cmd[${this}]: |-
        chmod go-w ${globals.configPath};
      user: root
    
  configureFilebeat:
    - if ('${settings.elasticsearchHost:}'):
        - cmd [${this}]: |-
            sed -ci -e 's/hosts:[[:space:]]*\["localhost:9200"\]/hosts: ["${settings.elasticsearchHost}"]/g' ${globals.configPath};
            sed -ci -e 's/#protocol: "https"/protocol: "http[s]*"/g' ${globals.configPath};
          user: root
    - else:
        - cmd [${this}]: |-
            sed -ci -e 's/^[[:space:]]*output.elasticsearch:/#output.elasticsearch:/g' ${globals.configPath};
            sed -ci -e 's/^[[:space:]]*hosts:[[:space:]]*\["localhost:9200"\]/#hosts: ["localhost:9200"]/g' ${globals.configPath};
          user: root
        - if ('${settings.logstashHost:}'):
            - cmd [${this}]: |-
                sed -ci -e 's/#output.logstash:/output.logstash:/g' ${globals.configPath};
                sed -ci -e 's/#hosts:[[:space:]]*\["localhost:5044"\]/hosts: \["${settings.logstashHost}"\]/g' ${globals.configPath};
              user: root
    - if ('${settings.kibanaHost:}'):
        - cmd [${this}]: |-
            sed -ci -e 's/#host:[[:space:]]*"localhost:5601"/host: "${settings.kibanaHost}"/g' ${globals.configPath};
          user: root
    - if ('${settings.elasticsearchUser:}'):
        - cmd [${this}]: |-
            sed -ci -e 's/#username:[[:space:]]*"elastic"/username: "${settings.elasticsearchUser}"/g' ${globals.configPath};
            sed -ci -e 's/#password:[[:space:]]*"changeme"/password: "${settings.elasticsearchPassword:}"/g' ${globals.configPath};
          user: root
          
    - script: |
        var fbModules = ['${globals.defaultModules}'];

        var nodeTypeModules = {
          'nginx.*': [ 'nginx' ],
          'haproxy.*': [ 'haproxy' ],
          'apache.*': [ 'apache' ],
          'redis.*': [ 'redis' ],
          'postgres.*': [ 'postgresql' ],
          'mysql.*|mariadb.*|percona.*': [ 'mysql' ],
          'postgres.*': [ 'postgresql' ],
          'mongo.*': [ 'mongodb' ]
        };

        for (var pattern in nodeTypeModules) {
          if (new RegExp(pattern).test('${targetNodes.nodeType}')) {
            fbModules = fbModules.concat(nodeTypeModules[pattern]);
          }
        }

        return { result: 0, modules: fbModules.join(" ")};

    - cmd [${this}]: |-
        filebeat modules enable ${response.modules}
        filebeat setup
        service filebeat start
      user: root
